Написать микросервис уведомления пользователей. 
При тестировании отправки Email отпраляйте key от создаваемого уведомления.

## API Handlers: 

### [POST] /create отправляет и логирует новое уведомление. При логировании ограничить макс. количество хранимых уведомлений.

Тело запроса:
- target_mail - строка на 24 символа (является ObjectID документа сущности, к которой относится уведомление)
- key - ключ уведомления enum
    - registration (Только отправит пользователю Email)
    - new_message (только создаст запись в документе пользователя)
    - new_post (только создаст запись в документе пользователя)
    - new_login (Создаст запись в документе пользователя и отправит email)
- data - произвольный объект из пар ключ/значение (Может отсутствовать)

Пример ответа

HTTP 201 Created

```json
{
    "success": true,
}
```

### [GET] /list производит листинг уведомлений пользователя.

#### query params
- user_mail [string] - идентификатор пользователя
- skip [int] - кол-во уведомлений, которые следует пропустить
- limit [int] - кол-во уведомлений которые следует вернуть

#### Пример ответа

HTTP 200 Ok

```json
{
    "success": true,
    "data": {
        "elements": 23, // всего уведомлений
        "new": 12, // Кол-во непрочитанных уведомлений
        "request": {
            "user_mail": "638f394d4b7243fc0399ea67",
            "skip": 0,
            "limit": 10,
        }
        "list": [
            {
                "id": "some_notification_id",
                "timestamp": 1698138241,
                "is_new": false,
                "user_mail": "638f394d4b7243fc0399ea67",
                "key": "new_message",
                "target_mail": "0399ea67638f394d4b7243fc",
                "data": {
                    "some_field": "some_value"
                },
            },
            ...
        ]
    }
}
```

#### [POST] /read создает отметку о прочтении уведомления.

#### query params
- user_id [string] - идентификатор пользователя
- notification_id [string] - Идентификатор уведомления

#### Пример ответа

HTTP 200 Ok

```json
{
    "success": true,
}
```
